// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile Bar renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "height": 333.5,
          "justifyContent": "center",
          "margin": 10,
        }
      }
    >
      <RecentWorkouts />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderBottomWidth": 0,
          "borderColor": "#fff",
          "borderTopWidth": 0,
          "flexDirection": "row",
          "height": 133.4,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "height": 125,
            "justifyContent": "center",
          }
        }
      >
        <Button
          color="#8BC34A"
          onPress={[Function]}
          title="Switch Recent/Past"
        />
      </View>
    </View>
  </View>,
  "nodes": Array [
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "height": 333.5,
            "justifyContent": "center",
            "margin": 10,
          }
        }
      >
        <RecentWorkouts />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderBottomWidth": 0,
            "borderColor": "#fff",
            "borderTopWidth": 0,
            "flexDirection": "row",
            "height": 133.4,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 125,
              "justifyContent": "center",
            }
          }
        >
          <Button
            color="#8BC34A"
            onPress={[Function]}
            title="Switch Recent/Past"
          />
        </View>
      </View>
    </View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <Workouts />,
    "_instance": Workouts {
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "setPastRender": [Function],
      "setRecentRender": [Function],
      "state": Object {
        "text": "Useless Placeholder",
        "viewPast": false,
        "viewRecent": true,
      },
      "updater": Updater {
        "_renderer": [Circular],
      },
      "workoutSeparator": [Function],
    },
    "_newState": null,
    "_rendered": <View
      style={
        Object {
          "backgroundColor": "#fff",
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "height": 333.5,
            "justifyContent": "center",
            "margin": 10,
          }
        }
      >
        <RecentWorkouts />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderBottomWidth": 0,
            "borderColor": "#fff",
            "borderTopWidth": 0,
            "flexDirection": "row",
            "height": 133.4,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 125,
              "justifyContent": "center",
            }
          }
        >
          <Button
            color="#8BC34A"
            onPress={[Function]}
            title="Switch Recent/Past"
          />
        </View>
      </View>
    </View>,
    "_rendering": false,
    "_updater": Updater {
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Workouts />,
}
`;
