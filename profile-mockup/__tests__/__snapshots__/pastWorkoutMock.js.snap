// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile Bar renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
        "margin": 10,
      }
    }
  >
    <RadioForm
      animation={true}
      buttonColor="#8BC34A"
      disabled={false}
      formHorizontal={true}
      initial={0}
      labelColor="#000"
      labelHorizontal={true}
      onPress={[Function]}
      radio_props={
        Array [
          Object {
            "label": "All ",
            "value": 0,
          },
          Object {
            "label": "Walk ",
            "value": 1,
          },
          Object {
            "label": "Run ",
            "value": 2,
          },
          Object {
            "label": "Bike ",
            "value": 3,
          },
          Object {
            "label": "Other ",
            "value": 4,
          },
        ]
      }
      selectedButtonColor="#2196f3"
      selectedLabelColor="#000"
      wrapStyle={Object {}}
    />
  </View>,
  "nodes": Array [
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
          "margin": 10,
        }
      }
    >
      <RadioForm
        animation={true}
        buttonColor="#8BC34A"
        disabled={false}
        formHorizontal={true}
        initial={0}
        labelColor="#000"
        labelHorizontal={true}
        onPress={[Function]}
        radio_props={
          Array [
            Object {
              "label": "All ",
              "value": 0,
            },
            Object {
              "label": "Walk ",
              "value": 1,
            },
            Object {
              "label": "Run ",
              "value": 2,
            },
            Object {
              "label": "Bike ",
              "value": 3,
            },
            Object {
              "label": "Other ",
              "value": 4,
            },
          ]
        }
        selectedButtonColor="#2196f3"
        selectedLabelColor="#000"
        wrapStyle={Object {}}
      />
    </View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <PastWorkouts />,
    "_instance": PastWorkouts {
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "viewType": 0,
      },
      "updater": Updater {
        "_renderer": [Circular],
      },
      "workoutSeparator": [Function],
    },
    "_newState": null,
    "_rendered": <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
          "margin": 10,
        }
      }
    >
      <RadioForm
        animation={true}
        buttonColor="#8BC34A"
        disabled={false}
        formHorizontal={true}
        initial={0}
        labelColor="#000"
        labelHorizontal={true}
        onPress={[Function]}
        radio_props={
          Array [
            Object {
              "label": "All ",
              "value": 0,
            },
            Object {
              "label": "Walk ",
              "value": 1,
            },
            Object {
              "label": "Run ",
              "value": 2,
            },
            Object {
              "label": "Bike ",
              "value": 3,
            },
            Object {
              "label": "Other ",
              "value": 4,
            },
          ]
        }
        selectedButtonColor="#2196f3"
        selectedLabelColor="#000"
        wrapStyle={Object {}}
      />
    </View>,
    "_rendering": false,
    "_updater": Updater {
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PastWorkouts />,
}
`;
